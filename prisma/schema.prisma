// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String
  createdAt DateTime @default(now())
  boards    Board[]  @relation("BoardOwner")
  boardMemberships BoardMember[]
}

model Board {
  id        String   @id @default(uuid())
  title     String
  ownerId   String
  owner     User     @relation("BoardOwner", fields: [ownerId], references: [id])
  createdAt DateTime @default(now())
  members   BoardMember[]
  lists     List[]
}

model BoardMember {
  id      String @id @default(uuid())
  boardId String
  userId  String
  board   Board  @relation(fields: [boardId], references: [id], onDelete: Cascade)
  user    User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([boardId, userId])
}

model List {
  id       String @id @default(uuid())
  boardId  String
  title    String
  position Int
  board    Board  @relation(fields: [boardId], references: [id], onDelete: Cascade)
  cards    Card[]
}

model Card {
  id          String      @id @default(uuid())
  listId      String
  title       String
  description String?
  position    Int
  dueDate     DateTime?
  list        List        @relation(fields: [listId], references: [id], onDelete: Cascade)
  attachments Attachment[]
}

model Attachment {
  id         String   @id @default(uuid())
  cardId     String
  fileUrl    String
  uploadedAt DateTime @default(now())
  card       Card     @relation(fields: [cardId], references: [id], onDelete: Cascade)
}
